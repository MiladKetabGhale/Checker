certificate :=
  quota "\n"
  seats "\n"
  candidates "\n"
  candidates "\n"
  (judgement "\n")+

quota := number space* "%" space* number

seats := number

candidate := upper+

candidates := list{candidate}

judgement :=
  ballots ";" space*
  tallies ";" space*
  piles ";" space*
  candidates ";" space*
  candidates ";" space*
  candidates

ballots := list{pair{list{candidates} quota}}

tallies := list{pair{candidate quota}}

piles := list{pair{candidate ballots}}

list{X} := number (space+ X)*
  (where number represents the number of items in the *)

number := Something for which Num.fromString returns SOME i

upper := Something for which Char.isUpper returns true

space := Something for which Char.isSpace returns true, but not newlines

----

Certificate file format:

certificate :=
  quota "\n"
  seats "\n"
  candidates "\n"
  candidates "\n"
  (judgement "\n")+

quota :=
  number "%" number

seats :=
  number

candidate := upper+

candidates := comma-list{candidate}

judgement :=
  ballots "; " tallies "; " piles "; " candidates "; " candidates "; " candidates

ballots := comma-list{"(" candidates "," quota ")"}

tallies :=
  space-list{candidate "{" quota "}"}

piles :=
  space-list{candidate "{" ballots "}"}

comma-list{X} := "[]" | "[" X ("," X)* "]"
space-list{X} := "" | X (" " X)*

number := Something for which Num.fromString returns SOME i

upper :=
  "A" | ... | "Z"

Example:

5%1
1
[A,B,C]
[A]
[]; A{5%1} B{2%1} C{3%1}; A{[([A,B,C],1%1),([A,B,C],1%1),([A,B,C],1%1),([A,C,B],1%1),([A,B,C],1%1)]} B{[([B,A,C],1%1),([B,C,A],1%1)]} C{[([C,B,A],1%1),([C,A,B],1%1),([C,B,A],1%1)]}; [A]; [A]; [B,C]
[]; A{5%1} B{2%1} C{2%1}; A{[([A,B,C],1%1),([A,B,C],1%1),([A,B,C],1%1),([A,C,B],1%1),([A,B,C],1%1)]} B{[([B,A,C],1%1)]} C{[([C,A,B],1%1),([C,B,A],1%1)]}; []; []; [A,B,C]
[([A,B,C],1%1),([C,B,A],1%1),([A,B,C],1%1),([A,B,C],1%1),([C,B,A],1%1),([A,C,B],1%1),([B,C,A],1%1),([A,B,C],1%1)]; A{0%1} B{0%1} C{0%1}; A{[]} B{[]} C{[]}; []; []; [A,B,C]
